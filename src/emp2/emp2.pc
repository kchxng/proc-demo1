#include <stdio.h>
#include <string.h>
#include <sqlca.h>

/* SQLCA는 SQL Communications Area로, SQL 작업의 결과를 저장합니다. */

/* 데이터베이스 연결에 필요한 변수들 */
EXEC SQL BEGIN DECLARE SECTION;
char username[20] = "hr";
char password[20] = "password";
  VARCHAR connect_string[200];
int department_id = 60; /* 조회할 부서 ID */
int employee_id;
char first_name[20];
char last_name[20];
char email[50];
char hire_date[20];
char job_id[10];
EXEC SQL END DECLARE SECTION;

void fetch_employee_info();

int main() {

      strcpy(connect_string.arr, "//localhost:1521/ORCLPDB1");
  connect_string.len = strlen(connect_string.arr);

    /* 데이터베이스 연결 */
    EXEC SQL CONNECT :username IDENTIFIED BY :password USING : connect_string;
    if (sqlca.sqlcode != 0) {
        printf("데이터베이스 연결 실패: %s\n", sqlca.sqlerrm.sqlerrmc);
        return 1;
    }

    /* 직원 정보 조회 */
    fetch_employee_info();

    /* 데이터베이스 연결 해제 */
    EXEC SQL COMMIT WORK RELEASE;
    return 0;
}

void fetch_employee_info() {
    EXEC SQL BEGIN DECLARE SECTION;
    SQL_CURSOR employee_cursor;
    EXEC SQL END DECLARE SECTION;

    // /* 커서 열기 */
    EXEC SQL ALLOCATE :employee_cursor;

    // /* 프로시저 호출 */
    EXEC SQL EXECUTE
      BEGIN
        hr_pkg.get_employee_info(:department_id, :employee_cursor);
      END;
    END-EXEC;
    if (sqlca.sqlcode != 0) {
        printf("프로시저 호출 실패: %s\n", sqlca.sqlerrm.sqlerrmc);
        EXEC SQL ROLLBACK WORK;
        return;
    }

    // /* 커서에서 데이터 가져오기 */
    EXEC SQL WHENEVER NOT FOUND DO BREAK;

    while (1) {
        EXEC SQL FETCH :employee_cursor INTO :employee_id, :first_name, :last_name, :email, :hire_date, :job_id;
        if (sqlca.sqlcode == 1403) {
            break;
        } else if (sqlca.sqlcode != 0) {
            printf("데이터 가져오기 실패: %s\n", sqlca.sqlerrm.sqlerrmc);
            break;
        }

        /* 직원 정보 출력 */
        printf("직원 ID: %d, 이름: %s %s, 이메일: %s, 입사일: %s, 직책: %s\n",
               employee_id, first_name, last_name, email, hire_date, job_id);
    }

    // /* 커서 닫기 */
    EXEC SQL CLOSE :employee_cursor;
}